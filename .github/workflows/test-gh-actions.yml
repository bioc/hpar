name: test-HPA-version # workflow name

#on: [push]# triggering event
on: # multiple triggering events
  push:
  schedule:
   - cron: '0 9 1,15 * *' #“At 09:00 on day-of-month 1 and 15.”
   
jobs: # groups all the jobs ran in this workflow
#----------
# JOB 1
#----------
  test-HPA-version: # name of the first job
    runs-on: ubuntu-latest # The type of runner that the job will run on
    container: bioconductor/bioconductor_docker:devel
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      
    steps: # group all the steps in the job named test-HPA-version
   
       - uses: actions/checkout@master # an action that checks out your repository and downloads it to the runner, allowing you to run actions against your code
       
       - name: Install latest hpar
         run:  Rscript -e "BiocManager::install('lgatto/hpar')"
         
       - name: Check HPA release
         id: check_HPA
        ## This will fail if there's a new version
         run: Rscript -e "stopifnot(!hpar:::newHpaVersion())"
     
       - uses: actions/checkout@master # an action that checks out your repository and downloads it to the runner, allowing you to run actions against your code
     
       - uses: JasonEtco/create-an-issue@v2 # create an issue on GitHub
         id: create-issue
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           filename: .github/ISSUE_TEMPLATE/checking-for-hpar-update-.md
         if: always() && (steps.check_HPA.outcome == 'failure')
         
       - run: 'echo Created issue number ${{ steps.create-issue.outputs.number }}'
         if: always() && (steps.check_HPA.outcome == 'failure')
         
       - run: 'echo Created ${{ steps.create-issue.outputs.url }}'
         if: always() && (steps.check_HPA.outcome == 'failure')
 
